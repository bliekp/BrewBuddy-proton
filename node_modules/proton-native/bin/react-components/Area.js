'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HasAreaParentContext = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ = require('../');

var _libuiNode = require('libui-node');

var _libuiNode2 = _interopRequireDefault(_libuiNode);

var _color = require('color');

var _color2 = _interopRequireDefault(_color);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HasAreaParentContext = _react2.default.createContext(false);

var AreaComponentPropTypes = {
  transform: _propTypes2.default.string,
  fill: _propTypes2.default.string,
  fillOpacity: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  stroke: _propTypes2.default.string,
  strokeOpacity: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  strokeWidth: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  strokeLinecap: _propTypes2.default.oneOf(['flat', 'round', 'square']),
  strokeLinejoin: _propTypes2.default.oneOf(['miter', 'round', 'bevel']),
  strokeMiterlimit: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
};

var AreaComponentDefaultProps = {
  fillOpacity: 1,
  strokeOpacity: 1,
  strokeWidth: 1,
  strokeMiterlimit: 10,
  strokeLinecap: 'flat',
  strokeLinejoin: 'miter'
};

var Area = function (_Component) {
  _inherits(Area, _Component);

  function Area() {
    _classCallCheck(this, Area);

    return _possibleConstructorReturn(this, (Area.__proto__ || Object.getPrototypeOf(Area)).apply(this, arguments));
  }

  _createClass(Area, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          stretchy = _props.stretchy,
          label = _props.label,
          column = _props.column,
          row = _props.row,
          span = _props.span,
          expand = _props.expand,
          align = _props.align,
          onMouseMove = _props.onMouseMove,
          onMouseUp = _props.onMouseUp,
          onMouseDown = _props.onMouseDown,
          onMouseEnter = _props.onMouseEnter,
          onMouseLeave = _props.onMouseLeave,
          onKeyUp = _props.onKeyUp,
          onKeyDown = _props.onKeyDown,
          onSizeChange = _props.onSizeChange,
          scrolling = _props.scrolling,
          groupProps = _objectWithoutProperties(_props, ['children', 'stretchy', 'label', 'column', 'row', 'span', 'expand', 'align', 'onMouseMove', 'onMouseUp', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onKeyUp', 'onKeyDown', 'onSizeChange', 'scrolling']);

      var areaProps = {
        children: children,
        stretchy: stretchy,
        label: label,
        column: column,
        row: row,
        span: span,
        expand: expand,
        align: align,
        onMouseMove: onMouseMove,
        onMouseUp: onMouseUp,
        onMouseDown: onMouseDown,
        onMouseEnter: onMouseEnter,
        onMouseLeave: onMouseLeave,
        onKeyUp: onKeyUp,
        onKeyDown: onKeyDown,
        onSizeChange: onSizeChange,
        scrolling: scrolling
      };
      return _react2.default.createElement(HasAreaParentContext.Provider, { value: true }, _react2.default.createElement(_.AreaInternal, areaProps, _react2.default.createElement(Area.Group, groupProps, children)));
    }
  }]);

  return Area;
}(_react.Component);

function toLibuiColor(color) {
  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

  return new _libuiNode2.default.Color(color.red() / 255, color.green() / 255, color.blue() / 255, color.alpha() * alpha);
}

Area.Gradient = function () {
  function AreaGradient() {
    _classCallCheck(this, AreaGradient);
  }

  _createClass(AreaGradient, null, [{
    key: 'create',
    value: function create(options) {
      var brush = new _libuiNode2.default.DrawBrush();

      brush.type = options.type;
      brush.start = new _libuiNode2.default.Point(options.x1, options.y1);
      brush.end = new _libuiNode2.default.Point(options.x2, options.y2);
      brush.outerRadius = options.r || 0;

      brush.stops = Object.entries(options.stops).map(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            stop = _ref2[0],
            color = _ref2[1];

        return new _libuiNode2.default.BrushGradientStop(stop, toLibuiColor((0, _color2.default)(color)));
      });

      return brush;
    }
  }, {
    key: 'createLinear',
    value: function createLinear(x1, y1, x2, y2, stops) {
      return AreaGradient.create({
        type: _libuiNode2.default.brushType.linearGradient,
        x1: x1,
        y1: y1,
        x2: x2,
        y2: y2,
        stops: stops
      });
    }
  }, {
    key: 'createRadial',
    value: function createRadial(x, y, x_r, y_r, r, stops) {
      if (!r) {
        // createRadial(x, y, r, stops)
        r = x_r;
        stops = y_r || {};
        return AreaGradient.create({
          type: _libuiNode2.default.brushType.radialGradient,
          x1: x,
          y1: y,
          x2: x,
          y2: y,
          r: r,
          stops: stops
        });
      } else {
        // createRadial(x, y, x_r, y_r, r, stops)
        return AreaGradient.create({
          type: _libuiNode2.default.brushType.radialGradient,
          x1: x,
          y1: y,
          x2: x_r,
          y2: y_r,
          r: r,
          stops: stops
        });
      }
    }
  }]);

  return AreaGradient;
}();

Area.propTypes = _extends({}, AreaComponentPropTypes);

Area.defaultProps = _extends({}, AreaComponentDefaultProps);
exports.HasAreaParentContext = HasAreaParentContext;
exports.default = Area;